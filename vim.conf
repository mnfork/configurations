" Vim-Plug Setup {{{
" Install vim-plug if not found
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif

" Run PlugInstall if there are missing plugins
autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
  \| PlugInstall --sync | source $HOME/.vimrc
\| endif
" }}}
" Install Plugins {{{
call plug#begin()
Plug 'sjl/badwolf'                                    " colorscheme
Plug 'francoiscabrol/ranger.vim'                      " Ranger integration
Plug 'godlygeek/tabular', { 'for': 'markdown' }       " required package for vim-markdown 
Plug 'preservim/vim-markdown', { 'for': 'markdown' }  " support for markdown
Plug 'ctrlpvim/ctrlp.vim'                             " fuzzy finding utility
Plug 'preservim/vim-wordy'                            " word selection support
Plug 'christoomey/vim-tmux-navigator'                 " tmux integration
Plug 'vim-airline/vim-airline'                        " getting a better status bar
Plug 'vim-airline/vim-airline-themes'                 " making the status bar pretty
call plug#end()
" }}}
" Colors {{{
colorscheme badwolf
syntax enable
" }}}
" Spaces & Tabs {{{
set tabstop=4                     " number of visual spaces per TAB
set softtabstop=4                 " number of spaces in tab when editing
set expandtab                     " tabs are spaces
" }}}
" UI Config {{{
set number                        " show line numbers
" auto toggle between hybrid and absolute line numbers
augroup numbertoggle
  autocmd!
  autocmd BufEnter,FocusGained,InsertLeave,WinEnter * if &nu && mode() != "i" | set rnu   | endif
  autocmd BufLeave,FocusLost,InsertEnter,WinLeave   * if &nu                  | set nornu | endif
augroup END

set showcmd                       " show command in bottom bar
set cursorline                    " highlight current line
filetype indent on                " load filetype-specific indent files
set wildmenu                      " visual autocomplete for command menu
set lazyredraw                    " redraw only when we need to
set showmatch                     " highlight matching [{()}]
set textwidth=100                 " textwidth limited to 100
set spell                         " turn on spell checking
" }}}
" Searching {{{
set incsearch                     " search as characters are entered
set hlsearch                      " highlight matches
" turn off search highlight
nnoremap <leader><space> :nohlsearch<CR>
" }}}
" Folding  {{{
set foldenable                    " enable folding
set foldlevelstart=10             " open most folds by default
set foldnestmax=10                " 10 nested fold max
set foldmethod=indent             " fold based on indent level
set modelines=1                   " setup last line to control folding for this file
" }}}
" Movement {{{
" move vertically by visual line
nnoremap j gj
nnoremap k gk
" }}}
" CtrlP {{{
let g:ctrlp_match_window = 'bottom,order:ttb'
let g:ctrlp_switch_buffer = 0
let g:ctrlp_working_path_mode = 0
" }}}
" Airline {{{
let g:airline_theme='badwolf'
" }}}
"

" vim:foldmethod=marker:foldlevel=0
